package com.atlassian.theplugin.idea.bamboo;

import com.atlassian.theplugin.bamboo.BambooServerFacade;
import com.atlassian.theplugin.configuration.ServerPasswordNotProvidedException;
import com.intellij.openapi.ui.DialogWrapper;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.jetbrains.annotations.Nullable;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

public class BuildCommentForm extends DialogWrapper {
	private JTextField buildKeyField;
	private JTextField buildNumberField;
	private JTextArea commentArea;
	private JPanel mainPanel;

	private final BambooServerFacade bambooFacade;
	private final BambooBuildAdapter build;

	public BuildCommentForm(BambooServerFacade bambooFacade, BambooBuildAdapter build) {
		super(false);
		init();
		pack();
		setTitle("Add Comment");

		this.bambooFacade = bambooFacade;
		this.build = build;

		this.buildKeyField.setText(build.getBuildKey());
		this.buildNumberField.setText(build.getBuildNumber());

		getOKAction().putValue(Action.NAME, "Add comment");
		getOKAction().setEnabled(false);
		commentArea.addKeyListener(new KeyAdapter() {
			public void keyTyped(KeyEvent event) {
				if (!"".equals(commentArea.getText())) {
					getOKAction().setEnabled(true);
				} else {
					getOKAction().setEnabled(false);
				}
				super.keyTyped(event);
			}
		});
	}

	protected void doOKAction() {
		try {
			bambooFacade.addCommentToBuild(build.getServer(), build.getBuildKey(), build.getBuildNumber(), commentArea.getText());
		} catch (ServerPasswordNotProvidedException e) {
			e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
		}

		super.doOKAction();
	}

	@Nullable
	protected JComponent createCenterPanel() {
		return mainPanel;
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		mainPanel = new JPanel();
		mainPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
		final JPanel panel1 = new JPanel();
		panel1.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
		mainPanel.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final JLabel label1 = new JLabel();
		label1.setText("Build key");
		panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		buildKeyField = new JTextField();
		buildKeyField.setEditable(false);
		panel1.add(buildKeyField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
		final JLabel label2 = new JLabel();
		label2.setText("Build number");
		panel1.add(label2, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		buildNumberField = new JTextField();
		buildNumberField.setEditable(false);
		panel1.add(buildNumberField, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
		final JScrollPane scrollPane1 = new JScrollPane();
		mainPanel.add(scrollPane1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(-1, 200), null, null, 0, false));
		commentArea = new JTextArea();
		scrollPane1.setViewportView(commentArea);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return mainPanel;
	}
}
