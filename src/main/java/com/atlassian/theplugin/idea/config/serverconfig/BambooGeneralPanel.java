package com.atlassian.theplugin.idea.config.serverconfig;

import com.atlassian.theplugin.configuration.BambooTooltipOption;
import com.intellij.uiDesigner.core.Spacer;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;

/**
 * Created by IntelliJ IDEA.
 * User: Jacek
 * Date: 2008-02-22
 * Time: 16:14:30
 * To change this template use File | Settings | File Templates.
 */
public class BambooGeneralPanel extends JPanel {
	private JRadioButton allFailuresFirstSuccess;
	private JRadioButton firstFailureFirstSuccess;
	private JRadioButton never;
	private JPanel rootComponent;

	private BambooTooltipOption configOption = null;

	public BambooGeneralPanel() {
		$$$setupUI$$$();

		add(rootComponent);
	}


	public void setData(BambooTooltipOption bambooTooltipOption) {

		configOption = bambooTooltipOption;

		if (configOption != null) {

			switch (configOption) {
				case ALL_FAULIRES_AND_FIRST_SUCCESS:
					allFailuresFirstSuccess.setSelected(true);
					break;
				case FIRST_FAILURE_AND_FIRST_SUCCESS:
					firstFailureFirstSuccess.setSelected(true);
					break;
				case NEVER:
					never.setSelected(true);
					break;
				default:
					never.setSelected(true);
					break;
			}
		} else {
			setDefault();
			configOption = getDefault();
		}
	}

	public BambooTooltipOption getData() {
		if (allFailuresFirstSuccess.isSelected()) {
			return BambooTooltipOption.ALL_FAULIRES_AND_FIRST_SUCCESS;
		} else if (firstFailureFirstSuccess.isSelected()) {
			return BambooTooltipOption.FIRST_FAILURE_AND_FIRST_SUCCESS;
		} else if (never.isSelected()) {
			return BambooTooltipOption.NEVER;
		} else {
			return getDefault();
		}
	}

	public boolean isModyfied() {
		if (configOption != null) {
			return !(configOption == getData());
		}

		return false;
	}

	private void setDefault() {
		allFailuresFirstSuccess.setSelected(true);
	}

	private BambooTooltipOption getDefault() {
		return BambooTooltipOption.ALL_FAULIRES_AND_FIRST_SUCCESS;
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		rootComponent = new JPanel();
		rootComponent.setLayout(new FormLayout("fill:d:grow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:d:grow", "center:d:grow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:grow"));
		final JLabel label1 = new JLabel();
		label1.setText("Show tooltip:");
		CellConstraints cc = new CellConstraints();
		rootComponent.add(label1, cc.xy(3, 3));
		allFailuresFirstSuccess = new JRadioButton();
		allFailuresFirstSuccess.setSelected(true);
		allFailuresFirstSuccess.setText("All build failures and first build success");
		rootComponent.add(allFailuresFirstSuccess, cc.xy(3, 5));
		firstFailureFirstSuccess = new JRadioButton();
		firstFailureFirstSuccess.setText("First build failure and first build success");
		rootComponent.add(firstFailureFirstSuccess, cc.xy(3, 7));
		never = new JRadioButton();
		never.setText("Never");
		rootComponent.add(never, cc.xy(3, 9));
		final Spacer spacer1 = new Spacer();
		rootComponent.add(spacer1, cc.xy(1, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
		final Spacer spacer2 = new Spacer();
		rootComponent.add(spacer2, cc.xy(1, 1, CellConstraints.DEFAULT, CellConstraints.FILL));
		final Spacer spacer3 = new Spacer();
		rootComponent.add(spacer3, cc.xy(3, 11, CellConstraints.DEFAULT, CellConstraints.FILL));
		final Spacer spacer4 = new Spacer();
		rootComponent.add(spacer4, cc.xy(5, 11, CellConstraints.FILL, CellConstraints.DEFAULT));
		ButtonGroup buttonGroup;
		buttonGroup = new ButtonGroup();
		buttonGroup.add(allFailuresFirstSuccess);
		buttonGroup.add(firstFailureFirstSuccess);
		buttonGroup.add(never);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return rootComponent;
	}

}
